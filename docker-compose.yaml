version: '3'

services:
  db:
    restart: always
    image: task-management/db
    build:
      dockerfile: Dockerfile.compose
      context: ./database
    ports:
      - "1437:1433"
    environment:
      - SA_PASSWORD=P@ssw0rd
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    command: ["sh", "/usr/config/entrypoint.sh"]
  redis:
    restart: always
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
  client:
    restart: always
    image: task-management/client
    build:
      dockerfile: Dockerfile.stage
      context: ./client
    container_name: client
    environment:
      - API_URL=api;
    ports:
      - "3000:3000"
    depends_on:
      - api
  api:
    restart: always
    image: task-management/api
    build:
      dockerfile: Dockerfile.stage
      context: ./api
    container_name: api
    environment:
      - ConnectionStrings__TasksDb=Server=db;DataBase=Tasks;User Id=sa;Password=P@ssw0rd;Connection Timeout=30;
      - ConnectionStrings__Redis=redis;
      - ConnectionStrings__ElasticSearch=http://elasticsearch/;
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
      - elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    container_name: elasticsearch
    ports:
      - "9200:9200"
    networks:
      - elk-network
  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.4
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk-network
    environment:
      ELASTICSEARCH_HOSTS: elasticsearch

networks:
  elk-network:
    driver: bridge